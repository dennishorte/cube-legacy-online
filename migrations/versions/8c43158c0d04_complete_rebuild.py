"""complete rebuild

Revision ID: 8c43158c0d04
Revises: 
Create Date: 2020-10-04 16:30:00.611444

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8c43158c0d04'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('draft',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('complete', sa.Boolean(), nullable=True),
    sa.Column('pack_size', sa.Integer(), nullable=True),
    sa.Column('num_packs', sa.Integer(), nullable=True),
    sa.Column('num_seats', sa.Integer(), nullable=True),
    sa.Column('scar_rounds_str', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scryfall_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=127), nullable=True),
    sa.Column('json', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scryfall_data_name'), 'scryfall_data', ['name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('slack_id', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('added_by_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(length=511), nullable=True),
    sa.ForeignKeyConstraint(['added_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_card_name'), 'card', ['name'], unique=False)
    op.create_index(op.f('ix_card_timestamp'), 'card', ['timestamp'], unique=False)
    op.create_table('pack',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('draft_id', sa.Integer(), nullable=True),
    sa.Column('seat_number', sa.Integer(), nullable=True),
    sa.Column('pack_number', sa.Integer(), nullable=True),
    sa.Column('num_picked', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['draft_id'], ['draft.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('participant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('draft_id', sa.Integer(), nullable=True),
    sa.Column('seat', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['draft_id'], ['draft.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pack_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=True),
    sa.Column('draft_id', sa.Integer(), nullable=True),
    sa.Column('pack_id', sa.Integer(), nullable=True),
    sa.Column('picked_by_id', sa.Integer(), nullable=True),
    sa.Column('pick_number', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], ),
    sa.ForeignKeyConstraint(['draft_id'], ['draft.id'], ),
    sa.ForeignKeyConstraint(['pack_id'], ['pack.id'], ),
    sa.ForeignKeyConstraint(['picked_by_id'], ['participant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True, comment='Time this scar was added to the pool'),
    sa.Column('text', sa.String(length=256), nullable=True, comment='Text that will be added to the card this scar is applied to.'),
    sa.Column('restrictions', sa.String(length=64), nullable=True, comment='Limitations on the kind of card this scar can be applied to.'),
    sa.Column('reminder', sa.String(length=256), nullable=True, comment='Some additional explanation of what this scar does.'),
    sa.Column('draft_id', sa.Integer(), nullable=True, comment='The draft in which this scar was applied, if any.'),
    sa.Column('draft_pack_number', sa.Integer(), nullable=True, comment='The draft round in which this scar was applied, if any.'),
    sa.Column('card_id', sa.Integer(), nullable=True, comment='Card this scar is applied to. If null, not yet applied.'),
    sa.Column('added_by_id', sa.Integer(), nullable=True, comment='User who added this scar to a card.'),
    sa.Column('added_timestamp', sa.DateTime(), nullable=True, comment='Time this scar was applied to a card.'),
    sa.Column('notes', sa.String(length=256), nullable=True, comment='Thoughts the player had when adding this scar to the card.'),
    sa.Column('lock_draft_id', sa.Integer(), nullable=True),
    sa.Column('lock_participant_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['added_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['card_id'], ['card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scar_timestamp'), 'scar', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scar_timestamp'), table_name='scar')
    op.drop_table('scar')
    op.drop_table('pack_card')
    op.drop_table('participant')
    op.drop_table('pack')
    op.drop_index(op.f('ix_card_timestamp'), table_name='card')
    op.drop_index(op.f('ix_card_name'), table_name='card')
    op.drop_table('card')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_scryfall_data_name'), table_name='scryfall_data')
    op.drop_table('scryfall_data')
    op.drop_table('draft')
    # ### end Alembic commands ###
